buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "maven"
            url = "https://repo1.maven.org/maven2"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'tech.justagod:cutter:2.1.0-SNAPSHOT'
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'cutter'
apply plugin: 'forge'

cutter.initializeDefault()
cutter.withoutDefaultLib = true
cutter.removeAnnotations = true
cutter.validation = false

version = "1.0"
group= "com.nikita23830.ewitchery" // http://maven.apache.org/guides/mini/guide-naming-conventions.html

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

jar {
    baseName = rootProject.name + "-" + version
    manifest {
        attributes 'FMLCorePlugin': 'com.nikita23830.ewitchery.common.asm.HookLoaderMod'
        attributes 'FMLAT': 'AdvanceWitchery_at.cfg'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
    include 'META-INF/AdvanceWitchery_at.cfg'
    include '**/*'
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile files(
            'lib/bukkit-1.7.10.jar',
            'lib/bukkit-1.7.10-sources.jar'
    );
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

if (project.hasProperty('assemble')) {
    assemble.finalizedBy buildAll
}
